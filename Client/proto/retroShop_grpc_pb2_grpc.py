# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from proto import retroShop_grpc_pb2 as proto_dot_retroShop__grpc__pb2


class invoiceServiceStub(object):
    """defino los servicios

    //Factura
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.findOneById = channel.unary_unary(
                '/invoiceService/findOneById',
                request_serializer=proto_dot_retroShop__grpc__pb2.IdInvoice.SerializeToString,
                response_deserializer=proto_dot_retroShop__grpc__pb2.ResponseObjectInvoiceData.FromString,
                )
        self.findListByIdBuyer = channel.unary_unary(
                '/invoiceService/findListByIdBuyer',
                request_serializer=proto_dot_retroShop__grpc__pb2.IdUserBuyer.SerializeToString,
                response_deserializer=proto_dot_retroShop__grpc__pb2.ResponseObjectInvoiceDataList.FromString,
                )
        self.findListByIdSeller = channel.unary_unary(
                '/invoiceService/findListByIdSeller',
                request_serializer=proto_dot_retroShop__grpc__pb2.IdUserSeller.SerializeToString,
                response_deserializer=proto_dot_retroShop__grpc__pb2.ResponseObjectInvoiceDataList.FromString,
                )
        self.findListByDatePurchase = channel.unary_unary(
                '/invoiceService/findListByDatePurchase',
                request_serializer=proto_dot_retroShop__grpc__pb2.DatePurchase.SerializeToString,
                response_deserializer=proto_dot_retroShop__grpc__pb2.ResponseObjectInvoiceDataList.FromString,
                )
        self.createNewInvoice = channel.unary_unary(
                '/invoiceService/createNewInvoice',
                request_serializer=proto_dot_retroShop__grpc__pb2.InvoiceRequest.SerializeToString,
                response_deserializer=proto_dot_retroShop__grpc__pb2.ResponseObjectInvoiceData.FromString,
                )
        self.updateInvoice = channel.unary_unary(
                '/invoiceService/updateInvoice',
                request_serializer=proto_dot_retroShop__grpc__pb2.DataInvoiceToUpdateRequest.SerializeToString,
                response_deserializer=proto_dot_retroShop__grpc__pb2.ResponseObjectInvoiceData.FromString,
                )


class invoiceServiceServicer(object):
    """defino los servicios

    //Factura
    """

    def findOneById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def findListByIdBuyer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def findListByIdSeller(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def findListByDatePurchase(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createNewInvoice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateInvoice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_invoiceServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'findOneById': grpc.unary_unary_rpc_method_handler(
                    servicer.findOneById,
                    request_deserializer=proto_dot_retroShop__grpc__pb2.IdInvoice.FromString,
                    response_serializer=proto_dot_retroShop__grpc__pb2.ResponseObjectInvoiceData.SerializeToString,
            ),
            'findListByIdBuyer': grpc.unary_unary_rpc_method_handler(
                    servicer.findListByIdBuyer,
                    request_deserializer=proto_dot_retroShop__grpc__pb2.IdUserBuyer.FromString,
                    response_serializer=proto_dot_retroShop__grpc__pb2.ResponseObjectInvoiceDataList.SerializeToString,
            ),
            'findListByIdSeller': grpc.unary_unary_rpc_method_handler(
                    servicer.findListByIdSeller,
                    request_deserializer=proto_dot_retroShop__grpc__pb2.IdUserSeller.FromString,
                    response_serializer=proto_dot_retroShop__grpc__pb2.ResponseObjectInvoiceDataList.SerializeToString,
            ),
            'findListByDatePurchase': grpc.unary_unary_rpc_method_handler(
                    servicer.findListByDatePurchase,
                    request_deserializer=proto_dot_retroShop__grpc__pb2.DatePurchase.FromString,
                    response_serializer=proto_dot_retroShop__grpc__pb2.ResponseObjectInvoiceDataList.SerializeToString,
            ),
            'createNewInvoice': grpc.unary_unary_rpc_method_handler(
                    servicer.createNewInvoice,
                    request_deserializer=proto_dot_retroShop__grpc__pb2.InvoiceRequest.FromString,
                    response_serializer=proto_dot_retroShop__grpc__pb2.ResponseObjectInvoiceData.SerializeToString,
            ),
            'updateInvoice': grpc.unary_unary_rpc_method_handler(
                    servicer.updateInvoice,
                    request_deserializer=proto_dot_retroShop__grpc__pb2.DataInvoiceToUpdateRequest.FromString,
                    response_serializer=proto_dot_retroShop__grpc__pb2.ResponseObjectInvoiceData.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'invoiceService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class invoiceService(object):
    """defino los servicios

    //Factura
    """

    @staticmethod
    def findOneById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/invoiceService/findOneById',
            proto_dot_retroShop__grpc__pb2.IdInvoice.SerializeToString,
            proto_dot_retroShop__grpc__pb2.ResponseObjectInvoiceData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def findListByIdBuyer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/invoiceService/findListByIdBuyer',
            proto_dot_retroShop__grpc__pb2.IdUserBuyer.SerializeToString,
            proto_dot_retroShop__grpc__pb2.ResponseObjectInvoiceDataList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def findListByIdSeller(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/invoiceService/findListByIdSeller',
            proto_dot_retroShop__grpc__pb2.IdUserSeller.SerializeToString,
            proto_dot_retroShop__grpc__pb2.ResponseObjectInvoiceDataList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def findListByDatePurchase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/invoiceService/findListByDatePurchase',
            proto_dot_retroShop__grpc__pb2.DatePurchase.SerializeToString,
            proto_dot_retroShop__grpc__pb2.ResponseObjectInvoiceDataList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def createNewInvoice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/invoiceService/createNewInvoice',
            proto_dot_retroShop__grpc__pb2.InvoiceRequest.SerializeToString,
            proto_dot_retroShop__grpc__pb2.ResponseObjectInvoiceData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def updateInvoice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/invoiceService/updateInvoice',
            proto_dot_retroShop__grpc__pb2.DataInvoiceToUpdateRequest.SerializeToString,
            proto_dot_retroShop__grpc__pb2.ResponseObjectInvoiceData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class itemServiceStub(object):
    """//Item
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.findOneById = channel.unary_unary(
                '/itemService/findOneById',
                request_serializer=proto_dot_retroShop__grpc__pb2.IdItem.SerializeToString,
                response_deserializer=proto_dot_retroShop__grpc__pb2.ResponseObjectItemData.FromString,
                )
        self.findListByIdInvoice = channel.unary_unary(
                '/itemService/findListByIdInvoice',
                request_serializer=proto_dot_retroShop__grpc__pb2.IdInvoiceInItem.SerializeToString,
                response_deserializer=proto_dot_retroShop__grpc__pb2.ResponseObjectItemDataList.FromString,
                )
        self.createNewItem = channel.unary_unary(
                '/itemService/createNewItem',
                request_serializer=proto_dot_retroShop__grpc__pb2.ItemRequest.SerializeToString,
                response_deserializer=proto_dot_retroShop__grpc__pb2.ResponseObjectItemData.FromString,
                )
        self.updateItem = channel.unary_unary(
                '/itemService/updateItem',
                request_serializer=proto_dot_retroShop__grpc__pb2.DataItemToUpdateRequest.SerializeToString,
                response_deserializer=proto_dot_retroShop__grpc__pb2.ResponseObjectItemData.FromString,
                )


class itemServiceServicer(object):
    """//Item
    """

    def findOneById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def findListByIdInvoice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createNewItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_itemServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'findOneById': grpc.unary_unary_rpc_method_handler(
                    servicer.findOneById,
                    request_deserializer=proto_dot_retroShop__grpc__pb2.IdItem.FromString,
                    response_serializer=proto_dot_retroShop__grpc__pb2.ResponseObjectItemData.SerializeToString,
            ),
            'findListByIdInvoice': grpc.unary_unary_rpc_method_handler(
                    servicer.findListByIdInvoice,
                    request_deserializer=proto_dot_retroShop__grpc__pb2.IdInvoiceInItem.FromString,
                    response_serializer=proto_dot_retroShop__grpc__pb2.ResponseObjectItemDataList.SerializeToString,
            ),
            'createNewItem': grpc.unary_unary_rpc_method_handler(
                    servicer.createNewItem,
                    request_deserializer=proto_dot_retroShop__grpc__pb2.ItemRequest.FromString,
                    response_serializer=proto_dot_retroShop__grpc__pb2.ResponseObjectItemData.SerializeToString,
            ),
            'updateItem': grpc.unary_unary_rpc_method_handler(
                    servicer.updateItem,
                    request_deserializer=proto_dot_retroShop__grpc__pb2.DataItemToUpdateRequest.FromString,
                    response_serializer=proto_dot_retroShop__grpc__pb2.ResponseObjectItemData.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'itemService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class itemService(object):
    """//Item
    """

    @staticmethod
    def findOneById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/itemService/findOneById',
            proto_dot_retroShop__grpc__pb2.IdItem.SerializeToString,
            proto_dot_retroShop__grpc__pb2.ResponseObjectItemData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def findListByIdInvoice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/itemService/findListByIdInvoice',
            proto_dot_retroShop__grpc__pb2.IdInvoiceInItem.SerializeToString,
            proto_dot_retroShop__grpc__pb2.ResponseObjectItemDataList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def createNewItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/itemService/createNewItem',
            proto_dot_retroShop__grpc__pb2.ItemRequest.SerializeToString,
            proto_dot_retroShop__grpc__pb2.ResponseObjectItemData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def updateItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/itemService/updateItem',
            proto_dot_retroShop__grpc__pb2.DataItemToUpdateRequest.SerializeToString,
            proto_dot_retroShop__grpc__pb2.ResponseObjectItemData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class virtualWalletServiceStub(object):
    """///virtual wallet
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.findOneById = channel.unary_unary(
                '/virtualWalletService/findOneById',
                request_serializer=proto_dot_retroShop__grpc__pb2.IdVirtualWallet.SerializeToString,
                response_deserializer=proto_dot_retroShop__grpc__pb2.ResponseObjectVirtualWalletData.FromString,
                )
        self.findByIdUser = channel.unary_unary(
                '/virtualWalletService/findByIdUser',
                request_serializer=proto_dot_retroShop__grpc__pb2.IdUserInVW.SerializeToString,
                response_deserializer=proto_dot_retroShop__grpc__pb2.ResponseObjectVirtualWalletData.FromString,
                )
        self.createNewVirtualWallet = channel.unary_unary(
                '/virtualWalletService/createNewVirtualWallet',
                request_serializer=proto_dot_retroShop__grpc__pb2.VirtualWalletRequest.SerializeToString,
                response_deserializer=proto_dot_retroShop__grpc__pb2.ResponseObjectVirtualWalletData.FromString,
                )
        self.updateVirtualWallet = channel.unary_unary(
                '/virtualWalletService/updateVirtualWallet',
                request_serializer=proto_dot_retroShop__grpc__pb2.DataToUpdateRequest.SerializeToString,
                response_deserializer=proto_dot_retroShop__grpc__pb2.ResponseObjectVirtualWalletData.FromString,
                )


class virtualWalletServiceServicer(object):
    """///virtual wallet
    """

    def findOneById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def findByIdUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createNewVirtualWallet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateVirtualWallet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_virtualWalletServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'findOneById': grpc.unary_unary_rpc_method_handler(
                    servicer.findOneById,
                    request_deserializer=proto_dot_retroShop__grpc__pb2.IdVirtualWallet.FromString,
                    response_serializer=proto_dot_retroShop__grpc__pb2.ResponseObjectVirtualWalletData.SerializeToString,
            ),
            'findByIdUser': grpc.unary_unary_rpc_method_handler(
                    servicer.findByIdUser,
                    request_deserializer=proto_dot_retroShop__grpc__pb2.IdUserInVW.FromString,
                    response_serializer=proto_dot_retroShop__grpc__pb2.ResponseObjectVirtualWalletData.SerializeToString,
            ),
            'createNewVirtualWallet': grpc.unary_unary_rpc_method_handler(
                    servicer.createNewVirtualWallet,
                    request_deserializer=proto_dot_retroShop__grpc__pb2.VirtualWalletRequest.FromString,
                    response_serializer=proto_dot_retroShop__grpc__pb2.ResponseObjectVirtualWalletData.SerializeToString,
            ),
            'updateVirtualWallet': grpc.unary_unary_rpc_method_handler(
                    servicer.updateVirtualWallet,
                    request_deserializer=proto_dot_retroShop__grpc__pb2.DataToUpdateRequest.FromString,
                    response_serializer=proto_dot_retroShop__grpc__pb2.ResponseObjectVirtualWalletData.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'virtualWalletService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class virtualWalletService(object):
    """///virtual wallet
    """

    @staticmethod
    def findOneById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/virtualWalletService/findOneById',
            proto_dot_retroShop__grpc__pb2.IdVirtualWallet.SerializeToString,
            proto_dot_retroShop__grpc__pb2.ResponseObjectVirtualWalletData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def findByIdUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/virtualWalletService/findByIdUser',
            proto_dot_retroShop__grpc__pb2.IdUserInVW.SerializeToString,
            proto_dot_retroShop__grpc__pb2.ResponseObjectVirtualWalletData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def createNewVirtualWallet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/virtualWalletService/createNewVirtualWallet',
            proto_dot_retroShop__grpc__pb2.VirtualWalletRequest.SerializeToString,
            proto_dot_retroShop__grpc__pb2.ResponseObjectVirtualWalletData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def updateVirtualWallet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/virtualWalletService/updateVirtualWallet',
            proto_dot_retroShop__grpc__pb2.DataToUpdateRequest.SerializeToString,
            proto_dot_retroShop__grpc__pb2.ResponseObjectVirtualWalletData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class userServiceStub(object):
    """////USER
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.findCurrentUser = channel.unary_unary(
                '/userService/findCurrentUser',
                request_serializer=proto_dot_retroShop__grpc__pb2.CurrentUser.SerializeToString,
                response_deserializer=proto_dot_retroShop__grpc__pb2.ResponseObjectUserData.FromString,
                )
        self.findUserByUsername = channel.unary_unary(
                '/userService/findUserByUsername',
                request_serializer=proto_dot_retroShop__grpc__pb2.UserToFind.SerializeToString,
                response_deserializer=proto_dot_retroShop__grpc__pb2.ResponseObjectUserData.FromString,
                )
        self.createNewUser = channel.unary_unary(
                '/userService/createNewUser',
                request_serializer=proto_dot_retroShop__grpc__pb2.UserRequest.SerializeToString,
                response_deserializer=proto_dot_retroShop__grpc__pb2.ResponseObjectUserData.FromString,
                )
        self.getList = channel.unary_unary(
                '/userService/getList',
                request_serializer=proto_dot_retroShop__grpc__pb2.Empty.SerializeToString,
                response_deserializer=proto_dot_retroShop__grpc__pb2.ResponseUserList.FromString,
                )


class userServiceServicer(object):
    """////USER
    """

    def findCurrentUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def findUserByUsername(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createNewUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_userServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'findCurrentUser': grpc.unary_unary_rpc_method_handler(
                    servicer.findCurrentUser,
                    request_deserializer=proto_dot_retroShop__grpc__pb2.CurrentUser.FromString,
                    response_serializer=proto_dot_retroShop__grpc__pb2.ResponseObjectUserData.SerializeToString,
            ),
            'findUserByUsername': grpc.unary_unary_rpc_method_handler(
                    servicer.findUserByUsername,
                    request_deserializer=proto_dot_retroShop__grpc__pb2.UserToFind.FromString,
                    response_serializer=proto_dot_retroShop__grpc__pb2.ResponseObjectUserData.SerializeToString,
            ),
            'createNewUser': grpc.unary_unary_rpc_method_handler(
                    servicer.createNewUser,
                    request_deserializer=proto_dot_retroShop__grpc__pb2.UserRequest.FromString,
                    response_serializer=proto_dot_retroShop__grpc__pb2.ResponseObjectUserData.SerializeToString,
            ),
            'getList': grpc.unary_unary_rpc_method_handler(
                    servicer.getList,
                    request_deserializer=proto_dot_retroShop__grpc__pb2.Empty.FromString,
                    response_serializer=proto_dot_retroShop__grpc__pb2.ResponseUserList.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'userService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class userService(object):
    """////USER
    """

    @staticmethod
    def findCurrentUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/userService/findCurrentUser',
            proto_dot_retroShop__grpc__pb2.CurrentUser.SerializeToString,
            proto_dot_retroShop__grpc__pb2.ResponseObjectUserData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def findUserByUsername(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/userService/findUserByUsername',
            proto_dot_retroShop__grpc__pb2.UserToFind.SerializeToString,
            proto_dot_retroShop__grpc__pb2.ResponseObjectUserData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def createNewUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/userService/createNewUser',
            proto_dot_retroShop__grpc__pb2.UserRequest.SerializeToString,
            proto_dot_retroShop__grpc__pb2.ResponseObjectUserData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/userService/getList',
            proto_dot_retroShop__grpc__pb2.Empty.SerializeToString,
            proto_dot_retroShop__grpc__pb2.ResponseUserList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class productServiceStub(object):
    """PRODUCTS
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.saveProduct = channel.unary_unary(
                '/productService/saveProduct',
                request_serializer=proto_dot_retroShop__grpc__pb2.ProductSaveRequest.SerializeToString,
                response_deserializer=proto_dot_retroShop__grpc__pb2.Response.FromString,
                )
        self.updateProduct = channel.unary_unary(
                '/productService/updateProduct',
                request_serializer=proto_dot_retroShop__grpc__pb2.ProductUpdateRequest.SerializeToString,
                response_deserializer=proto_dot_retroShop__grpc__pb2.Response.FromString,
                )
        self.getProduct = channel.unary_unary(
                '/productService/getProduct',
                request_serializer=proto_dot_retroShop__grpc__pb2.IdProduct.SerializeToString,
                response_deserializer=proto_dot_retroShop__grpc__pb2.ProductResponse.FromString,
                )
        self.findByIdUser = channel.unary_unary(
                '/productService/findByIdUser',
                request_serializer=proto_dot_retroShop__grpc__pb2.IdUserInProduct.SerializeToString,
                response_deserializer=proto_dot_retroShop__grpc__pb2.ProductResponseList.FromString,
                )
        self.getAll = channel.unary_unary(
                '/productService/getAll',
                request_serializer=proto_dot_retroShop__grpc__pb2.EmptyProduct.SerializeToString,
                response_deserializer=proto_dot_retroShop__grpc__pb2.ProductResponseList.FromString,
                )


class productServiceServicer(object):
    """PRODUCTS
    """

    def saveProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getProduct(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def findByIdUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getAll(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_productServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'saveProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.saveProduct,
                    request_deserializer=proto_dot_retroShop__grpc__pb2.ProductSaveRequest.FromString,
                    response_serializer=proto_dot_retroShop__grpc__pb2.Response.SerializeToString,
            ),
            'updateProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.updateProduct,
                    request_deserializer=proto_dot_retroShop__grpc__pb2.ProductUpdateRequest.FromString,
                    response_serializer=proto_dot_retroShop__grpc__pb2.Response.SerializeToString,
            ),
            'getProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.getProduct,
                    request_deserializer=proto_dot_retroShop__grpc__pb2.IdProduct.FromString,
                    response_serializer=proto_dot_retroShop__grpc__pb2.ProductResponse.SerializeToString,
            ),
            'findByIdUser': grpc.unary_unary_rpc_method_handler(
                    servicer.findByIdUser,
                    request_deserializer=proto_dot_retroShop__grpc__pb2.IdUserInProduct.FromString,
                    response_serializer=proto_dot_retroShop__grpc__pb2.ProductResponseList.SerializeToString,
            ),
            'getAll': grpc.unary_unary_rpc_method_handler(
                    servicer.getAll,
                    request_deserializer=proto_dot_retroShop__grpc__pb2.EmptyProduct.FromString,
                    response_serializer=proto_dot_retroShop__grpc__pb2.ProductResponseList.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'productService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class productService(object):
    """PRODUCTS
    """

    @staticmethod
    def saveProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/productService/saveProduct',
            proto_dot_retroShop__grpc__pb2.ProductSaveRequest.SerializeToString,
            proto_dot_retroShop__grpc__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def updateProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/productService/updateProduct',
            proto_dot_retroShop__grpc__pb2.ProductUpdateRequest.SerializeToString,
            proto_dot_retroShop__grpc__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/productService/getProduct',
            proto_dot_retroShop__grpc__pb2.IdProduct.SerializeToString,
            proto_dot_retroShop__grpc__pb2.ProductResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def findByIdUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/productService/findByIdUser',
            proto_dot_retroShop__grpc__pb2.IdUserInProduct.SerializeToString,
            proto_dot_retroShop__grpc__pb2.ProductResponseList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getAll(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/productService/getAll',
            proto_dot_retroShop__grpc__pb2.EmptyProduct.SerializeToString,
            proto_dot_retroShop__grpc__pb2.ProductResponseList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
